// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RideTogether.Dal;

#nullable disable

namespace RideTogether.Dal.Migrations
{
    [DbContext(typeof(RideTogetherDbContext))]
    partial class RideTogetherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RideTogether.Dal.City.CityDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("RouteDaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RouteDaoId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RideTogether.Dal.Person.DriverDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("screen_name");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("RideTogether.Dal.Person.HitchhikerDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("screen_name");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Hitchhikers");
                });

            modelBuilder.Entity("RideTogether.Dal.Route.RouteDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("RideTogether.Dal.Trip.TripDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<int?>("DriverDaoId")
                        .HasColumnType("integer");

                    b.Property<int>("PassengersCount")
                        .HasColumnType("integer")
                        .HasColumnName("passengers_count");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("DriverDaoId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("RideTogether.Dal.City.CityDao", b =>
                {
                    b.HasOne("RideTogether.Dal.Route.RouteDao", null)
                        .WithMany("Cities")
                        .HasForeignKey("RouteDaoId");
                });

            modelBuilder.Entity("RideTogether.Dal.Trip.TripDao", b =>
                {
                    b.HasOne("RideTogether.Dal.Person.DriverDao", null)
                        .WithMany("Trips")
                        .HasForeignKey("DriverDaoId");
                });

            modelBuilder.Entity("RideTogether.Dal.Person.DriverDao", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("RideTogether.Dal.Route.RouteDao", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
